{
  "lines": [
    { "content": "// Mixed Permission Example - Shows current mix pattern", "ai": null, "human": null },
    { "content": "// @guard:ai:r @guard:human:r", "ai": "read", "human": "read" },
    { "content": "const sharedData = await loadSharedConfiguration();", "ai": "read", "human": "read" },
    { "content": "const settings = parseSettings(sharedData);", "ai": "read", "human": "read" },
    { "content": "console.log(\"Both AI and human can read this\");", "ai": "read", "human": "read" },
    { "content": "", "ai": null, "human": null },
    { "content": "// @guard:ai:w @guard:human:r", "ai": "write", "human": "read" },
    { "content": "function processDataWithAI(userData) {", "ai": "write", "human": "read" },
    { "content": "    // AI can modify, humans can only read", "ai": "write", "human": "read" },
    { "content": "    return aiModel.enhance(userData);", "ai": "write", "human": "read" },
    { "content": "}", "ai": "write", "human": "read" },
    { "content": "", "ai": null, "human": null },
    { "content": "// Individual Permission Examples", "ai": null, "human": null },
    { "content": "// @guard:ai:w", "ai": "write", "human": null },
    { "content": "function generateReport(data: ReportData): string {", "ai": "write", "human": null },
    { "content": "    const formatted = formatData(data);", "ai": "write", "human": null },
    { "content": "    return createReportTemplate(formatted);", "ai": "write", "human": null },
    { "content": "}", "ai": "write", "human": null },
    { "content": "", "ai": null, "human": null },
    { "content": "// @guard:ai:r", "ai": "read", "human": null },
    { "content": "const config = await loadConfiguration();", "ai": "read", "human": null },
    { "content": "const theme = config.get('theme', 'light');", "ai": "read", "human": null },
    { "content": "applyTheme(theme);", "ai": "read", "human": null },
    { "content": "", "ai": null, "human": null },
    { "content": "// @guard:ai:n", "ai": "noAccess", "human": null },
    { "content": "const apiKey = process.env.SECRET_API_KEY;", "ai": "noAccess", "human": null },
    { "content": "const dbPassword = process.env.DB_PASSWORD;", "ai": "noAccess", "human": null },
    { "content": "const encryptionKey = generateSecureKey();", "ai": "noAccess", "human": null },
    { "content": "", "ai": null, "human": null },
    { "content": "// @guard:human:w", "ai": null, "human": "write" },
    { "content": "function handleUserInput(input: UserInput): void {", "ai": null, "human": "write" },
    { "content": "    validateInput(input);", "ai": null, "human": "write" },
    { "content": "    processUserAction(input.action, input.data);", "ai": null, "human": "write" },
    { "content": "}", "ai": null, "human": "write" },
    { "content": "", "ai": null, "human": null },
    { "content": "// @guard:human:r", "ai": null, "human": "read" },
    { "content": "const userPreferences = getUserPreferences();", "ai": null, "human": "read" },
    { "content": "const displayLanguage = userPreferences.language || 'en';", "ai": null, "human": "read" },
    { "content": "initializeUI(displayLanguage);", "ai": null, "human": "read" },
    { "content": "", "ai": null, "human": null },
    { "content": "// @guard:human:n", "ai": null, "human": "noAccess" },
    { "content": "const privateUserData = await fetchPrivateData();", "ai": null, "human": "noAccess" },
    { "content": "const personalInfo = decryptUserInfo(privateUserData);", "ai": null, "human": "noAccess" },
    { "content": "storeSecurely(personalInfo);", "ai": null, "human": "noAccess" },
    { "content": "", "ai": null, "human": null },
    { "content": "// @guard:ai:context", "ai": "context", "human": null },
    { "content": "// API Reference: POST /api/reports", "ai": "context", "human": null },
    { "content": "// Expected payload: { data: ReportData, format: 'pdf' | 'excel' }", "ai": "context", "human": null },
    { "content": "// Returns: { url: string, expiresAt: Date }", "ai": "context", "human": null },
    { "content": "", "ai": null, "human": null },
    { "content": "// @guard:ai:context:w", "ai": "contextWrite", "human": null },
    { "content": "// TODO: Update this section with new authentication flow", "ai": "contextWrite", "human": null },
    { "content": "// Need to document OAuth2 integration steps", "ai": "contextWrite", "human": null },
    { "content": "// Include examples for refresh token handling", "ai": "contextWrite", "human": null },
    { "content": "", "ai": null, "human": null }
  ]
}