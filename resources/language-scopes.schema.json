{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Language Scopes Configuration",
  "description": "Tree-sitter node type mappings for semantic scopes across programming languages",
  "type": "object",
  "required": ["version", "languages"],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "Reference to this schema file"
    },
    "description": {
      "type": "string",
      "description": "Human-readable description of this configuration"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version of this configuration"
    },
    "commonPatterns": {
      "type": "object",
      "description": "Reusable pattern definitions",
      "additionalProperties": {
        "type": "array",
        "items": { "type": "string" }
      }
    },
    "languages": {
      "type": "object",
      "description": "Language-specific scope mappings",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "extends": {
            "type": "string",
            "description": "Language ID to inherit scopes from"
          },
          "scopes": {
            "type": "object",
            "description": "Semantic scope to tree-sitter node type mappings",
            "properties": {
              "func": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Function/method declaration nodes"
              },
              "class": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Class/interface/struct declaration nodes"
              },
              "block": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Block statement nodes (if, for, while, etc.)"
              },
              "sig": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Function/method signature nodes"
              },
              "body": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Body/content nodes for functions and classes"
              },
              "method": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Method-specific nodes"
              },
              "import": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Import/include statement nodes"
              },
              "export": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Export statement nodes"
              },
              "docstring": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Documentation string nodes"
              }
            },
            "additionalProperties": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        }
      }
    }
  }
}